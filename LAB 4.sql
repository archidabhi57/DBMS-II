--• Stored Procedures
--1. All tables Insert, Update & Delete
	--INSERT
	--1

		alter PROCEDURE PR_DEPARTMENT_INSERT
		@DEPARTMENTID      INT,
		@DEPARTMENTNAME	   VARCHAR(100)

		AS
		BEGIN

		INSERT INTO DEPARTMENT VALUES
		(@DEPARTMENTID,
		 @DEPARTMENTNAME)

		 END

		 EXEC PR_DEPARTMENT_INSERT 1,'ADMIN'
		 EXEC PR_DEPARTMENT_INSERT 2,'IT'
		 EXEC PR_DEPARTMENT_INSERT 3,'HR'
		 EXEC PR_DEPARTMENT_INSERT 4,'ACCOUNT'

		 SELECT * FROM DEPARTMENT

		--INSERT
		--2

		alter PROCEDURE PR_DESIGNATION_INSERT

		@DESIGNATIONID		INT,
		@DESIGNATIONNAME	VARCHAR(100)

		AS 
		BEGIN

		INSERT INTO DESIGNATION VALUES
		(@DESIGNATIONID,
		 @DESIGNATIONNAME)

		 END

		 EXEC PR_DESIGNATION_INSERT 11,'JOBBER'
		 EXEC PR_DESIGNATION_INSERT 12,'WELDER'
		 EXEC PR_DESIGNATION_INSERT 13,'CLERK'
		 EXEC PR_DESIGNATION_INSERT 14,'MANAGER'
		 EXEC PR_DESIGNATION_INSERT 15,'CEO'

		 SELECT * FROM DESIGNATION
	
		--INSERT
		--3
		alter PROCEDURE PR_PERSON_INSERT

		@FIRSTNAME			VARCHAR(100),
		@LASTNAME			VARCHAR(100),
		@SALARY				DECIMAL(8,2),
		@JOININGDATE		DATETIME,
		@DEPARTMENTID		INT,
		@DESIGNATIONID		INT

		AS 
		BEGIN

		INSERT INTO PERSON VALUES
		(		
		 @FIRSTNAME,		
		 @LASTNAME	,	
		 @SALARY	,		
		 @JOININGDATE,	
		 @DEPARTMENTID,
		 @DESIGNATIONID)

		 END

		 EXEC PR_PERSON_INSERT 'RAHUL','ANSHU',56000,'01-01-1990',1,12
		 EXEC PR_PERSON_INSERT 'HARDIK','HINSU',18000,'1990-09-25',2,11
		 EXEC PR_PERSON_INSERT 'BHAVIN','KAMANI',25000,'1991-05-14',NULL,11
		 EXEC PR_PERSON_INSERT 'BHOOMI','PATEL',39000,'2014-02-20',1,13
		 EXEC PR_PERSON_INSERT 'ROHIT','RAJGOR',17000,'1990-07-23',2,15
		 EXEC PR_PERSON_INSERT 'PRIYA','MEHTA',25000,'1990-10-18',2,NULL
		 EXEC PR_PERSON_INSERT 'NEHA','TRIVEDI',18000,'2014-02-20',3,15

		 SELECT * FROM PERSON
		 

		 --UPDATE
		 --1

		 alter PROCEDURE PR_DEPARTMENT_UPDATE
		 @DEPARTMENTID       INT,
		 @DEPARTMENTNAME	 VARCHAR(100)

		 AS
		 BEGIN
		 UPDATE DEPARTMENT
		 SET

		 DEPARTMENTNAME = @DEPARTMENTNAME

		WHERE  DEPARTMENTID = @DEPARTMENTID
		END

		EXEC PR_DEPARTMENT_UPDATE 1,ADMIN

		SELECT * FROM DEPARTMENT

		--UPDATE 
		--2

		alter PROCEDURE PR_DESIGNATION_UPDATE
		@DESIGNATIONID       INT,
		@DESIGNATIONNAME	 VARCHAR(100)

		AS
		BEGIN
		UPDATE DESIGNATION
		SET  
		DESIGNATIONNAME = @DESIGNATIONNAME

		WHERE DESIGNATIONID = @DESIGNATIONID
		END

		EXEC PR_DESIGNATION_UPDATE 11,'JOBBER'

		SELECT * FROM DESIGNATION

		--UPDATE
		--3

		alter PROCEDURE PR_PERSON_UPDATE
		@WORKERID INT,
		@FIRSTNAME		VARCHAR(100),
		@LASTNAME		VARCHAR(100),
		@SALARY			DECIMAL(8,2),
		@JOININGDATE			DATETIME,
		@DEPARTMENTID		INT,
		@DESIGNATIONID		INT

		AS
		BEGIN
		UPDATE PERSON
		SET
		FIRSTNAME = @FIRSTNAME	,	
		LASTNAME = @LASTNAME	,	
		SALARY = @SALARY		,	
		JOININGDATE = @JOININGDATE,	
		DEPARTMENTID = @DEPARTMENTID,
		DESIGNATIONID = @DESIGNATIONID

		WHERE WORKERID = @WORKERID
		END

		EXEC PR_PERSON_UPDATE 108,'ASD','ERT',66001,'1991-01-01',5,11

		SELECT * FROM  PERSON


		--DELETE
		--1
		alter PROCEDURE PR_DEPARTMENT_DELETE
		(@DEPARTMENTID     INT,
		 @DEPARTMENTNAME   VARCHAR(100))
		

		 AS
		 DELETE FROM DEPARTMENT 
		 WHERE DEPARTMENTID = @DEPARTMENTID
		
		EXEC PR_DEPARTMENT_DELETE 4,'ACCOUNT'
		

		--DELETE
		--2
		alter PROCEDURE PR_DESIGNATION_DELETE
		(@DESIGNATIONID    INT)
		
		 AS
		 DELETE FROM DESIGNATION
		 WHERE DESIGNATIONID = @DESIGNATIONID

		 EXEC PR_DESIGNATION_DELETE 15


		 --DELETE
		 --3
		 alter PROCEDURE PR_PERSON_DELETE
		 (@WORKERID      INT,
		  @FIRSTNAME     VARCHAR(100),
		  @LASTNAME      VARCHAR(100),
		  @SALARY        DECIMAL(8,2),
		  @JOININGDATE   DATETIME,
		  @DEPARTMENTID  INT,
		  @DESIGNATIONID INT
		  )

		  AS
		  DELETE FROM PERSON
		  WHERE WORKERID = @WORKERID

		  EXEC PR_PERSON_DELETE 101,'RAHUL','anSHU',56001,'1991-01-01',2,11

		  SELECT * FROM PERSON

--2. All tables SelectAll (If foreign key is available than do write join and take columns on select list)
		--SELECTALL
		--1
		alter PROCEDURE PR_DESIGNATION_SELECTALL
		
		AS
		BEGIN
		SELECT * FROM DESIGNATION

		END

		--SELECTALL
		--2
		alter PROCEDURE PR_DEPARTMENT_SELECTALL
		
		AS
		BEGIN

		SELECT * FROM DEPARTMENT
		END

		--SELECTALL
		--3
		alter PROCEDURE PR_PERSON_SELECTALL

		AS
		BEGIN
		SELECT
		PERSON.WORKERID,
		PERSON.FIRSTNAME,
		PERSON.LASTNAME,
		PERSON.SALARY,
		PERSON.JOININGDATE,
		DEPARTMENT.DEPARTMENTID,
		DESIGNATION.DESIGNATIONID

		FROM PERSON INNER JOIN DEPARTMENT 
		
		ON 
		PERSON.DEPARTMENTID = DEPARTMENT.DEPARTMENTID
		INNER JOIN DESIGNATION

		ON 
		PERSON.DESIGNATIONID = DESIGNATION.DESIGNATIONID
	END

--3. All tables SelectPK	
		
		--SELECTPK
		--1
		alter PROCEDURE PR_DEPARTMENT_SELECTPK
		@DEPARTMENTID   INT

		AS
		BEGIN
		SELECT * FROM DEPARTMENT

		WHERE @DEPARTMENTID = DEPARTMENTID
		END

		--SELECTPK
		--2
		alter PROCEDURE PR_DESIGNATION_SELECTPK
		@DESIGNATIONID INT

		AS
		BEGIN
		SELECT * FROM DESIGNATION

		WHERE @DESIGNATIONID = DESIGNATIONID
		END

		--SELECTPK
		--3

		alter PROCEDURE PR_PERSON_SELECTPK
		@WORKERID INT

		AS
		BEGIN
		SELECT * FROM PERSON

		WHERE @WORKERID = WORKERID
		END


--4. Create Procedure that takes Department Name & Designation Name as Input and Returns a 
--table with Worker’s First Name, Salary, Joining Date & Department Name.

		alter PROCEDURE PR_PERSON

		@DEPARTMENTNAME   VARCHAR(100),
		@DESIGNATIONNAME  VARCHAR(100)

		AS
		BEGIN
		SELECT

		PERSON.FIRSTNAME,
		PERSON.SALARY,
		PERSON.JOININGDATE,
		DEPARTMENT.DEPARTMENTNAME
		
	
		FROM PERSON INNER JOIN DEPARTMENT 
		
		ON
		PERSON.DEPARTMENTID = DEPARTMENT.DEPARTMENTID
		INNER JOIN DESIGNATION
		ON
		PERSON.DESIGNATIONID = DESIGNATION.DESIGNATIONID
		WHERE @DEPARTMENTNAME=DEPARTMENTNAME AND
		@DESIGNATIONNAME=DESIGNATIONNAME

		
	END
	EXEC PR_PERSON 'HR','CEO'


--5. Create Procedure that takes FirstName as an input parameter and displays’ all the details of 
--the worker with their department & designation name.

		alter PROCEDURE PR_PERSON1

		@FIRSTNAME  VARCHAR(100)

		AS
		BEGIN
		SELECT * FROM PERSON
		INNER JOIN DEPARTMENT

		ON PERSON.DEPARTMENTID = DEPARTMENT.DEPARTMENTID
		INNER JOIN DESIGNATION

		ON PERSON.DESIGNATIONID = DESIGNATION.DESIGNATIONID

		WHERE
		@FIRSTNAME =FIRSTNAME
		END


--6. Create Procedure which displays department wise maximum, minimum & total salaries.

		alter PROCEDURE PR_DISPLAY_SALARY
		AS
		BEGIN
		SELECT	DEPARTMENTNAME,
				MAX(P.SALARY) AS MAXIMUM,
				MIN(P.SALARY) AS MINIMUM,
				SUM(P.SALARY) AS TOTAL
		FROM DEPARTMENT AS D INNER JOIN PERSON AS P
		ON D.DEPARTMENTID=P.DEPARTMENTID
		GROUP BY DEPARTMENTNAME;
		END
		EXEC PR_DISPLAY_SALARY 





--• Views
--1. Create a view that display first 100 workers details.

		alter VIEW DETAILS
		AS
		SELECT TOP 100 * FROM PERSON

		SELECT * FROM PERSON

--2. Create a view that displays designation wise maximum, minimum & total salaries.

		alter VIEW DESIGNATION_WISE_SALARY
		AS
		SELECT D.DESIGNATIONNAME,MAX(P.SALARY) AS MAXIMUM,MIN(P.SALARY) AS MINIMUM,SUM(P.SALARY) AS TOTAL
		FROM DESIGNATION AS D INNER JOIN PERSON AS P
		ON D.DESIGNATIONID=P.DESIGNATIONID
		GROUP BY DESIGNATIONNAME;

		SELECT * FROM DESIGNATION_WISE_SALARY


--3. Create a view that displays Worker’s first name with their salaries & joining date, it also displays 
--duration column which is difference of joining date with respect to current date.
		
		alter VIEW DISPLAY_WORKER
		AS
		SELECT FIRSTNAME,SALARY,JOININGDATE ,DATEDIFF(YEAR,JOININGDATE,GETDATE()) AS DURATION
		FROM PERSON

		SELECT * FROM DISPLAY_WORKER

--4. Create a view which shows department & designation wise total number of workers.

		alter VIEW TOTAL_WORKER_D
		AS
		SELECT DEPARTMENT.DEPARTMENTNAME,COUNT(PERSON.FIRSTNAME) AS TOTAL
		FROM PERSON INNER JOIN DEPARTMENT
		ON PERSON.DEPARTMENTID = DEPARTMENT.DEPARTMENTID
		GROUP BY DEPARTMENT.DEPARTMENTNAME

		SELECT * FROM TOTAL_WORKER_D

		alter VIEW TOTAL_WORKER_DE
		AS
		SELECT DESIGNATION.DESIGNATIONNAME,COUNT(PERSON.FIRSTNAME) AS TOTAL
		FROM PERSON INNER JOIN DESIGNATION
		ON PERSON.DESIGNATIONID = DESIGNATION.DESIGNATIONID
		GROUP BY DESIGNATION.DESIGNATIONNAME

		SELECT * FROM TOTAL_WORKER_DE

--5. Create a view that displays worker names who don’t have either in any department or 
--designation.

		alter VIEW DISPLAY_DETAILS
		AS
		SELECT FIRSTNAME
		FROM PERSON
		WHERE DEPARTMENTID IS NULL OR DESIGNATIONID IS NULL

		SELECT * FROM DISPLAY_DETAILS




--• User Defined Functions
--1. Create a table valued function which accepts DepartmentID as a parameter & returns a worker 
--table based on DepartmentID.

		ALTER FUNCTION ID
		(
			@DEPARTMENTID INT
		)
		RETURNS TABLE
		AS
		
		RETURN(SELECT WORKERID FROM PERSON WHERE DEPARTMENTID = @DEPARTMENTID)
		
		SELECT * FROM ID (2)

	

--2. Create a table valued function which returns a table with unique city names from worker table.

		
--3. Create a scalar valued function which accepts two parameters start date & end date, and 
--returns a date difference in days.

		alter FUNCTION STARTDATE
		(
		@STARTDATE  DATETIME,
		@ENDDATE    DATETIME
		)
		RETURNS VARCHAR(150) 
		AS
		BEGIN
		RETURN (SELECT CONVERT(VARCHAR(150),DATEDIFF(DAY,@STARTDATE,@ENDDATE)))
		END
		
--4. Create a scalar valued function which accepts two parameters year in integer & month in 
--integer and returns total days in passed month & year.

		ALTER FUNCTION TOTAL_DAYS
		(@MONTH INT,
		 @YEAR INT)
		RETURNS INT
		AS
		BEGIN
		DECLARE @DATE
		DATE = CAST(CAST(@YEAR AS CHAR(4))
			       +RIGHT('0'+CAST(@MONTH AS VARCHAR(2)),2)
				   +'01' AS DATE);
		RETURN DATEDIFF(DAY,
				DATEADD(MONTH,DATEDIFF(MONTH,0,@DATE),0),
				DATEADD(MONTH,DATEDIFF(MONTH,0,@DATE)+1,0));
				
		END	

		SELECT DBO.TOTAL_DAYS (2,2021)


--5. Create a scalar valued function which accepts two parameters year in integer & month in
--integer and returns first date in passed month & year.